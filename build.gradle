buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'



base {
    group = mod_group_id
    archivesName = mod_name + "-1.20.x"
    version = mod_version
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'info'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run/client')

            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            workingDirectory project.file('run/game-test')

            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run/data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://maven.tterrag.com/'
        content {
            includeGroup 'com.tterrag.registrate'
            includeGroup 'com.simibubi.create'
            includeGroup 'com.jozufozu.flywheel'
        }
    }
    maven { url = 'https://maven.blamejared.com'
        content {
            includeGroup 'mezz.jei'
            includeGroup 'vazkii.patchouli'
        }
    }
    maven { url = 'https://maven.architectury.dev/'
        content {
            includeGroup 'dev.architectury'
        }
    }
    maven { url = 'https://maven.saps.dev/minecraft'
        content {
            includeGroup 'dev.latvian.mods'
        }
    }
    maven { url = 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
    maven { url = 'https://maven.firstdarkdev.xyz/snapshots'
        content {
            includeGroup 'com.lowdragmc.ldlib'
        }
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.5")) {
        jarJar.ranged(it, "[0.3.5,)")
    }

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}+${minecraft_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}+${minecraft_version}:api")

    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
    implementation fg.deobf("curse.maven:configuration-444699:${configuration_version}")
    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")

    implementation fg.deobf("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}")

    implementation fg.deobf("curse.maven:firmacivilization-714158:5064065")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}") { transitive = false }
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}") { transitive = false }
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}") { transitive = false }
    implementation fg.deobf("curse.maven:roughly-enough-items-310111:4951142") { transitive = false }
    implementation fg.deobf("curse.maven:cloth-config-348521:4973441")

    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-${minecraft_version}:${ldlib_version}") { transitive = false }
    implementation fg.deobf("curse.maven:gregtechceu-modern-890405:${gregtech_version}") { transitive = false }

    implementation fg.deobf("curse.maven:simple-login-312664:${simplelogin_version}")

    implementation fg.deobf("curse.maven:ftb-teams-404468:4623116") { transitive = false }
    implementation fg.deobf("curse.maven:ftb-library-404465:4864329") { transitive = false }
    implementation fg.deobf("curse.maven:ftb-xmod-compat-889915:4932157") { transitive = false }

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patcouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patcouli_version}")
    implementation fg.deobf("curse.maven:tfc-302973:${tfc_version}")
    implementation fg.deobf("curse.maven:tfcambiental-940350:${tfcambiental_version}")

    implementation fg.deobf("curse.maven:cc-tweaked-282001:5005529") { transitive = false }

    implementation fg.deobf("curse.maven:ae2-223794:${ae2_version}") { transitive = false }

    // Performance
    implementation fg.deobf("curse.maven:modernfix-790626:4980929")
    implementation fg.deobf("curse.maven:embeddium-908741:4984832")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    archiveClassifier = "dev"
}
