plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

version = '0.0.1'
group = 'exception.terrafirmagreg'
archivesBaseName = 'terrafirmagreg'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: "2023.09.03-1.20.1"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') //needed since gt dependency does not include one

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            property 'forge.enabledGameTestNamespaces', 'terrafirmagreg'

            property "mixin.env.remapRefMap", 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            arg "-mixin.config=terrafirmagreg.mixins.json"

            mods {
                terrafirmagreg {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            property 'forge.enabledGameTestNamespaces', 'terrafirmagreg'

            property "mixin.env.remapRefMap", 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            arg "-mixin.config=terrafirmagreg.mixins.json"

            mods {
                terrafirmagreg {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run/gameTest')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'terrafirmagreg'

            mods {
                terrafirmagreg {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            property "mixin.env.remapRefMap", 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            arg "-mixin.config=terrafirmagreg.mixins.json"

            args '--mod', 'terrafirmagreg', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'create'

            mods {
                terrafirmagreg {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.shedaniel.me" }
    maven { url = 'https://maven.tterrag.com/'
        content {
            includeGroup "com.simibubi.create"
            includeGroup "com.jozufozu.flywheel"
            includeGroup "com.tterrag.registrate"
        }
    }
    maven {
        url = 'https://maven.blamejared.com'
    }
    maven { url = 'https://maven.architectury.dev/'
        content {
            includeGroup "dev.architectury"
        }
    }
    maven { url = 'https://maven.saps.dev/minecraft'
        content {
            includeGroup 'dev.latvian.mods'
        }
    }
    maven { url = 'https://cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = 'https://jitpack.io' } //mixinextras
    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:12.0.674")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:12.0.109")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patcouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patcouli_version}")

    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")
    implementation fg.deobf("curse.maven:ldlib-626676:${ldlib_version}")
    implementation fg.deobf("curse.maven:configuration-444699:${configuration_version}")
    implementation fg.deobf("curse.maven:gregtechceu-modern-890405:${gregtech_version}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:${jade_version}")

    implementation(fg.deobf("tfc:TerraFirmaCraft-1.20.1:d694eb55"))
}

mixin {
    add sourceSets.main, "terrafirmagreg.mixin-refmap.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "terrafirmagreg",
                "Specification-Vendor"    : "exception",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "electrolyte",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs": "terrafirmagreg.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
